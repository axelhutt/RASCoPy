# -*- coding: utf-8 -*-
"""Recurrence.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XtOsL9eNxHAjmHGAP_U27d5nOFWac70N
"""

import numpy as np
from scipy.spatial.distance import cdist
import matplotlib.pyplot as plt
import os
from mpl_toolkits.mplot3d import Axes3D
from matplotlib.animation import FuncAnimation

def rec_mat(y, epsilon):
  y = np.array(y)
  D = cdist(y, y, 'euclidean')
  R = np.array(D<epsilon)
  R=R.astype(int)
  print('\n-----------Recurrence matrix-----------')
  print(R)
  #R=np.tril(R)


  rep = input("\nDo you want to save this recurrence matrix ? (Y/n): ")
  if rep.lower() == 'y':
    while True:
      name_file = input("Please, give a name to your backup file: ")
      if not os.path.exists(f'{name_file}'):
        a=0
        break
      else:
        rep3 = input(f"The file '{name_file}' already exists. Do you want to write your Recurrence matrix inside? (Y/n): ")
        if rep3.lower() == 'y':
          a=1
          break
        else:
          rep4 = input(f"Do you want to replace '{name_file}'? (Y/n): ")
          if rep4.lower() == 'y':
            a=2
            break

    if a == 0 or a == 2:
      with open(name_file, 'w') as fichier:
        fichier.write('\n-----------Recurrence matrix-----------' + '\n')
        np.savetxt(fichier, R, fmt='%d', delimiter='\t', newline='\n', header='', footer='', comments='')
    if a == 1:
      with open(name_file, 'a') as fichier:
        fichier.write('\n-----------Recurrence matrix-----------' + '\n')
        np.savetxt(fichier, R, fmt='%d', delimiter='\t', newline='\n', header='', footer='', comments='')

    print(f"Recurrence matrix has been successfully saved in {name_file}")


  return R

def rec_plt(R):

  x, y = np.where(R == 1)
  print('\n-----------Recurrence plot-----------')
  fig=plt.figure()
  plt.scatter(x, y, c='black', marker='o')
  plt.show(block=False)

  rep = input("\nDo you want to save this recurrence plot ? (Y/n): ")
  if rep.lower() == 'y':
    while True:
      name_file = input("Please, give a name to your plot: ")
      if not os.path.exists(f'{name_file}.png'):
        break
      else:
          rep2 = input(f"The file '{name_file}.png' already exists. Do you want to replace it ? (Y/n): ")
      if rep2.lower() == 'y':
        break
    plt.savefig(f'{name_file}.png')
    print("Recurrence plot has been successfully saved")

def anim_traj(y):
  '''
  fig = plt.figure()
  ax = fig.add_subplot(111, projection='3d')

  ax.plot(y[:, 0], y[:, 1], y[:, 2], color='blue', label='Trajectory')

  num_red_points = 5
  red_points, = ax.plot([], [], [], 'ro', markersize=8)

  def update(frame):
      start_frame = max(0, frame - num_red_points + 1)
      end_frame = frame + 1

      red_points.set_data(y[start_frame:end_frame, 0], y[start_frame:end_frame, 1])
      red_points.set_3d_properties(y[start_frame:end_frame, 2])

      return red_points,

  ani = FuncAnimation(fig, update, frames=y.shape[0], interval=50, blit=True)
  plt.show(block=False)

  rep = input("Do you want to save this animation ? (Y/n)")
  if rep.lower() == 'y':
    while True:
      name_file = input("Please, give a name to your animation: ")
      if not os.path.exists(f'{name_file}.mp4'):
        break
      else:
          rep2 = input(f"The file '{name_file}.mp4' already exists. Do you want to replace it ? (Y/n)")
      if rep2.lower() == 'y':
        break

    ani.save(f'{name_file}.mp4', writer='ffmpeg', fps=30, extra_args=['-vcodec', 'libx264'])
    print(f"{name_file} has been successfully saved")


  '''